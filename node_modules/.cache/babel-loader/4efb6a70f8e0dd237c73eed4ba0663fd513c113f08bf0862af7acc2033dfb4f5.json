{"ast":null,"code":"/**\r\n * บีบอัดและปรับขนาดรูปภาพอัตโนมัติ\r\n * @param {File} file - ไฟล์รูปภาพ\r\n * @param {number} maxSize - ขนาดสูงสุด (px) default: 400\r\n * @param {number} quality - คุณภาพ (0-1) default: 0.7\r\n * @returns {Promise<string>} - Base64 string\r\n */export const compressImage=function(file){let maxSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:400;let quality=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.7;return new Promise((resolve,reject)=>{// ตรวจสอบขนาดไฟล์ (ถ้าเกิน 5MB ให้เตือน)\nconst maxFileSize=5*1024*1024;// 5MB\nif(file.size>maxFileSize){reject(new Error('ไฟล์ใหญ่เกินไป กรุณาเลือกไฟล์ที่เล็กกว่า 5MB'));return;}const reader=new FileReader();reader.onerror=()=>{reject(new Error('ไม่สามารถอ่านไฟล์ได้'));};reader.onload=e=>{const img=new Image();img.onerror=()=>{reject(new Error('ไฟล์ไม่ใช่รูปภาพที่ถูกต้อง'));};img.onload=()=>{try{const canvas=document.createElement('canvas');let width=img.width;let height=img.height;// คำนวณขนาดใหม่ (รักษาสัดส่วน)\nif(width>height){if(width>maxSize){height=Math.round(height*maxSize/width);width=maxSize;}}else{if(height>maxSize){width=Math.round(width*maxSize/height);height=maxSize;}}// ตั้งค่า canvas\ncanvas.width=width;canvas.height=height;const ctx=canvas.getContext('2d');// เพิ่มคุณภาพการ render\nctx.imageSmoothingEnabled=true;ctx.imageSmoothingQuality='high';// วาดรูปลง canvas\nctx.drawImage(img,0,0,width,height);// แปลงเป็น base64 (JPEG สำหรับขนาดเล็กกว่า)\nconst compressedImage=canvas.toDataURL('image/jpeg',quality);// ตรวจสอบขนาดผลลัพธ์\nconst sizeInBytes=Math.round(compressedImage.length*3/4);const sizeInKB=Math.round(sizeInBytes/1024);console.log(\"Image compressed: \".concat(sizeInKB,\"KB (\").concat(width,\"x\").concat(height,\")\"));resolve(compressedImage);}catch(error){reject(new Error('เกิดข้อผิดพลาดในการบีบอัดรูป'));}};img.src=e.target.result;};reader.readAsDataURL(file);});};/**\r\n * ตรวจสอบว่าเป็นไฟล์รูปภาพหรือไม่\r\n */export const isImageFile=file=>{const validTypes=['image/jpeg','image/jpg','image/png','image/gif','image/webp'];return validTypes.includes(file.type);};/**\r\n * แปลงขนาดไฟล์เป็น string ที่อ่านง่าย\r\n */export const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return Math.round(bytes/Math.pow(k,i)*100)/100+' '+sizes[i];};","map":{"version":3,"names":["compressImage","file","maxSize","arguments","length","undefined","quality","Promise","resolve","reject","maxFileSize","size","Error","reader","FileReader","onerror","onload","e","img","Image","canvas","document","createElement","width","height","Math","round","ctx","getContext","imageSmoothingEnabled","imageSmoothingQuality","drawImage","compressedImage","toDataURL","sizeInBytes","sizeInKB","console","log","concat","error","src","target","result","readAsDataURL","isImageFile","validTypes","includes","type","formatFileSize","bytes","k","sizes","i","floor","pow"],"sources":["F:/bmt_app/src/utils/imageCompressor.js"],"sourcesContent":["/**\r\n * บีบอัดและปรับขนาดรูปภาพอัตโนมัติ\r\n * @param {File} file - ไฟล์รูปภาพ\r\n * @param {number} maxSize - ขนาดสูงสุด (px) default: 400\r\n * @param {number} quality - คุณภาพ (0-1) default: 0.7\r\n * @returns {Promise<string>} - Base64 string\r\n */\r\nexport const compressImage = (file, maxSize = 400, quality = 0.7) => {\r\n  return new Promise((resolve, reject) => {\r\n    // ตรวจสอบขนาดไฟล์ (ถ้าเกิน 5MB ให้เตือน)\r\n    const maxFileSize = 5 * 1024 * 1024; // 5MB\r\n    if (file.size > maxFileSize) {\r\n      reject(new Error('ไฟล์ใหญ่เกินไป กรุณาเลือกไฟล์ที่เล็กกว่า 5MB'));\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    \r\n    reader.onerror = () => {\r\n      reject(new Error('ไม่สามารถอ่านไฟล์ได้'));\r\n    };\r\n    \r\n    reader.onload = (e) => {\r\n      const img = new Image();\r\n      \r\n      img.onerror = () => {\r\n        reject(new Error('ไฟล์ไม่ใช่รูปภาพที่ถูกต้อง'));\r\n      };\r\n      \r\n      img.onload = () => {\r\n        try {\r\n          const canvas = document.createElement('canvas');\r\n          let width = img.width;\r\n          let height = img.height;\r\n          \r\n          // คำนวณขนาดใหม่ (รักษาสัดส่วน)\r\n          if (width > height) {\r\n            if (width > maxSize) {\r\n              height = Math.round((height * maxSize) / width);\r\n              width = maxSize;\r\n            }\r\n          } else {\r\n            if (height > maxSize) {\r\n              width = Math.round((width * maxSize) / height);\r\n              height = maxSize;\r\n            }\r\n          }\r\n          \r\n          // ตั้งค่า canvas\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          \r\n          const ctx = canvas.getContext('2d');\r\n          \r\n          // เพิ่มคุณภาพการ render\r\n          ctx.imageSmoothingEnabled = true;\r\n          ctx.imageSmoothingQuality = 'high';\r\n          \r\n          // วาดรูปลง canvas\r\n          ctx.drawImage(img, 0, 0, width, height);\r\n          \r\n          // แปลงเป็น base64 (JPEG สำหรับขนาดเล็กกว่า)\r\n          const compressedImage = canvas.toDataURL('image/jpeg', quality);\r\n          \r\n          // ตรวจสอบขนาดผลลัพธ์\r\n          const sizeInBytes = Math.round((compressedImage.length * 3) / 4);\r\n          const sizeInKB = Math.round(sizeInBytes / 1024);\r\n          \r\n          console.log(`Image compressed: ${sizeInKB}KB (${width}x${height})`);\r\n          \r\n          resolve(compressedImage);\r\n        } catch (error) {\r\n          reject(new Error('เกิดข้อผิดพลาดในการบีบอัดรูป'));\r\n        }\r\n      };\r\n      \r\n      img.src = e.target.result;\r\n    };\r\n    \r\n    reader.readAsDataURL(file);\r\n  });\r\n};\r\n\r\n/**\r\n * ตรวจสอบว่าเป็นไฟล์รูปภาพหรือไม่\r\n */\r\nexport const isImageFile = (file) => {\r\n  const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\r\n  return validTypes.includes(file.type);\r\n};\r\n\r\n/**\r\n * แปลงขนาดไฟล์เป็น string ที่อ่านง่าย\r\n */\r\nexport const formatFileSize = (bytes) => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}